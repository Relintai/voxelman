<?xml version="1.0" encoding="UTF-8" ?>
<class name="VoxelChunkDefault" inherits="VoxelChunk" version="3.5">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="clear_rids">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="create_colliders">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="layer_mask" type="int" default="1" />
			<description>
			</description>
		</method>
		<method name="debug_mesh_add_vertices_to">
			<return type="void" />
			<argument index="0" name="arr" type="PoolVector3Array" />
			<description>
			</description>
		</method>
		<method name="debug_mesh_allocate">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="debug_mesh_array_clear">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="debug_mesh_clear">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="debug_mesh_free">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="debug_mesh_has">
			<return type="bool" />
			<description>
			</description>
		</method>
		<method name="debug_mesh_send">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="draw_cross_voxels">
			<return type="void" />
			<argument index="0" name="max" type="Vector3" />
			<description>
			</description>
		</method>
		<method name="draw_cross_voxels_fill">
			<return type="void" />
			<argument index="0" name="max" type="Vector3" />
			<argument index="1" name="fill" type="float" />
			<description>
			</description>
		</method>
		<method name="draw_debug_mdr_colliders">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="draw_debug_voxel_lights">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="draw_debug_voxels">
			<return type="void" />
			<argument index="0" name="max" type="int" />
			<argument index="1" name="color" type="Color" default="Color( 1, 1, 1, 1 )" />
			<description>
			</description>
		</method>
		<method name="emit_build_finished">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="free_chunk">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="free_colliders">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<description>
			</description>
		</method>
		<method name="free_index">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<description>
			</description>
		</method>
		<method name="get_light">
			<return type="VoxelLight" />
			<argument index="0" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="get_light_count" qualifiers="const">
			<return type="int" />
			<description>
			</description>
		</method>
		<method name="get_mesh_rids">
			<return type="Dictionary" />
			<description>
			</description>
		</method>
		<method name="mesh_rid_get">
			<return type="RID" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_rid_get_count">
			<return type="int" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_rid_get_index">
			<return type="RID" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<argument index="2" name="index" type="int" />
			<description>
			</description>
		</method>
		<method name="mesh_rid_set">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<argument index="2" name="value" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_rid_set_index">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<argument index="2" name="index" type="int" />
			<argument index="3" name="value" type="RID" />
			<description>
			</description>
		</method>
		<method name="mesh_rids_clear">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<description>
			</description>
		</method>
		<method name="meshes_create">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_count" type="int" />
			<description>
			</description>
		</method>
		<method name="meshes_free">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<description>
			</description>
		</method>
		<method name="meshes_get">
			<return type="Array" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<description>
			</description>
		</method>
		<method name="meshes_has">
			<return type="bool" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<description>
			</description>
		</method>
		<method name="meshes_set">
			<return type="void" />
			<argument index="0" name="mesh_index" type="int" />
			<argument index="1" name="mesh_type_index" type="int" />
			<argument index="2" name="meshes" type="Array" />
			<description>
			</description>
		</method>
		<method name="rids_free">
			<return type="void" />
			<description>
			</description>
		</method>
		<method name="set_mesh_rids">
			<return type="void" />
			<argument index="0" name="rids" type="Dictionary" />
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="build_flags" type="int" setter="set_build_flags" getter="get_build_flags">
		</member>
		<member name="current_lod_level" type="int" setter="set_current_lod_level" getter="get_current_lod_level" default="0">
		</member>
		<member name="lights_dirty" type="bool" setter="set_lights_dirty" getter="get_lights_dirty">
		</member>
		<member name="lod_num" type="int" setter="set_lod_num" getter="get_lod_num">
		</member>
	</members>
	<constants>
		<constant name="DEFAULT_CHANNEL_TYPE" value="0" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_ISOLEVEL" value="1" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_ALT_TYPE" value="2" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_ALT_ISOLEVEL" value="3" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_LIGHT_COLOR_R" value="4" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_LIGHT_COLOR_G" value="5" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_LIGHT_COLOR_B" value="6" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_AO" value="7" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_RANDOM_AO" value="8" enum="DefaultChannels">
		</constant>
		<constant name="DEFAULT_CHANNEL_LIQUID_FLOW" value="9" enum="DefaultChannels">
		</constant>
		<constant name="MAX_DEFAULT_CHANNELS" value="10" enum="DefaultChannels">
		</constant>
		<constant name="MESH_INDEX_TERRAIN" value="0">
		</constant>
		<constant name="MESH_INDEX_PROP" value="1">
		</constant>
		<constant name="MESH_INDEX_LIQUID" value="2">
		</constant>
		<constant name="MESH_INDEX_CLUTTER" value="3">
		</constant>
		<constant name="MESH_TYPE_INDEX_MESH" value="0">
		</constant>
		<constant name="MESH_TYPE_INDEX_MESH_INSTANCE" value="1">
		</constant>
		<constant name="MESH_TYPE_INDEX_SHAPE" value="2">
		</constant>
		<constant name="MESH_TYPE_INDEX_BODY" value="3">
		</constant>
		<constant name="BUILD_FLAG_USE_ISOLEVEL" value="1" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_USE_LIGHTING" value="2" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_USE_AO" value="4" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_USE_RAO" value="8" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_GENERATE_AO" value="16" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_AUTO_GENERATE_RAO" value="32" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_BAKE_LIGHTS" value="64" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_CREATE_COLLIDER" value="128" enum="BuildFlags">
		</constant>
		<constant name="BUILD_FLAG_CREATE_LODS" value="256" enum="BuildFlags">
		</constant>
	</constants>
</class>
